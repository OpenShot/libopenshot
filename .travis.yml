language: cpp
compiler: gcc

import:
  - ./.travis.apt.yml

matrix:
  include:

    - name: "Coverage + FFmpeg 3.4 GCC (Ubuntu 18.04 Bionic)"
      env:
        - BUILD_VERSION=coverage_ffmpeg34
        - CMAKE_EXTRA_ARGS="-DENABLE_COVERAGE=1"
        - TEST_TARGET=coverage
      os: linux
      dist: bionic
      addons:
        apt:
          sources:
          - *src_ffmpeg34
          packages:
          - *pkg_ffmpeg34
          - lcov
          - binutils-common # For c++filt

    - name: "FFmpeg 4 GCC (Ubuntu 18.04 Bionic)"
      env:
        - BUILD_VERSION=ffmpeg4
        - CMAKE_EXTRA_ARGS=""
        - TEST_TARGET=test
      os: linux
      dist: bionic
      addons:
        apt:
          sources:
          - *src_ffmpeg4
          packages:
          - *pkg_ffmpeg4

    - name: "FFmpeg 3.4 Clang (Ubuntu 18.04 Bionic)"
      env:
        - BUILD_VERSION=clang_ffmpeg34
        - CMAKE_EXTRA_ARGS=""
        - TEST_TARGET=test
      os: linux
      dist: bionic
      compiler: clang
      addons:
        apt:
          sources:
          - *src_ffmpeg34
          packages:
          - *src_ffmpeg34
          - libomp-dev

    - name: "FFmpeg 3.2 GCC (Ubuntu 16.04 Xenial)"
      env:
        - BUILD_VERSION=ffmpeg32
        - CMAKE_EXTRA_ARGS=""
        - TEST_TARGET="os_test"
      os: linux
      dist: xenial
      addons:
        apt:
          sources:
          - sourceline: 'ppa:openshot.developers/libopenshot-daily'
          - sourceline: 'ppa:beineri/opt-qt-5.10.0-xenial'
          - sourceline: 'ppa:jon-hedgerows/ffmpeg-backports'
          packages:
          - *ff_common
          - libavcodec57
          - libavdevice57
          - libavfilter6
          - libavformat57
          - libavresample3
          - libavutil55
          - libpostproc54
          - libswresample2
          - libswscale4

    - name: "FFmpeg 2 GCC (Ubuntu 16.04 Xenial)"
      env:
        - BUILD_VERSION=ffmpeg2
        - CMAKE_EXTRA_ARGS=""
        - TEST_TARGET="os_test"
      os: linux
      dist: xenial
      addons:
        apt:
          sources:
          - sourceline: 'ppa:openshot.developers/libopenshot-daily'
          - sourceline: 'ppa:beineri/opt-qt-5.10.0-xenial'
          packages:
          - *ff_common

script:
  - mkdir -p build; cd build;
  - cmake -DCMAKE_BUILD_TYPE:STRING="Debug" ${CMAKE_EXTRA_ARGS} ../
  - make VERBOSE=1
  - make ${TEST_TARGET}
  - make install DESTDIR="$BUILD_VERSION"
  - cd ..

after_success:
  - if [ "x$TEST_TARGET" = "xcoverage" ]; then bash <(curl -s https://codecov.io/bash) -f build/coverage.info || echo "Codecov did not collect coverage reports"; fi
